# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /about                      controllers.Application.about
GET     /contact                    controllers.Application.contact
GET     /profile                    controllers.Application.profile

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration
GET     /signup                     securesocial.controllers.Registration.signUp
POST    /signup                     securesocial.controllers.Registration.handleSignUp

# Authentication
GET     /authenticate/:provider     securesocial.controllers.LoginPage.authenticate(provider)

# News routes
# Create
GET     /news/new                   controllers.News.create
POST    /news                       controllers.News.save
# Retrieve
GET     /news                       controllers.News.index
GET     /news/:id                   controllers.News.view(id: Long)
GET     /news/search/:label         controllers.News.search(label: String)
# Update
GET     /news/:id/edit              controllers.News.edit(id: Long)
POST    /news/:id                   controllers.News.update(id: Long)
# Delete
POST    /news/:id/delete            controllers.News.delete(id: Long)

# Create
GET     /hackathons/:hid/news/new					controllers.News.createH(hid: Long)
POST    /hackathons/:hid/news               		controllers.News.saveH(hid: Long)
# Retrieve
GET     /hackathons/:hid/news   					controllers.News.indexH(hid: Long)
GET     /hackathons/:hid/news/:id           		controllers.News.viewH(hid: Long, id: Long)
# Update
GET     /hackathons/:hid/news/:id/edit      		controllers.News.editH(hid: Long, id: Long)
POST    /hackathons/:hid/news/:id/update    		controllers.News.updateH(hid: Long, id: Long)
# Delete
POST    /hackathons/:hid/news/:id/delete    		controllers.News.deleteH(hid: Long, id: Long)

# Problems routes
# Create
GET     /hackathons/:hid/problems/new				controllers.Problem.create(hid: Long)
POST    /hackathons/:hid/problems               	controllers.Problem.save(hid: Long)
# Retrieve
GET     /hackathons/:hid/problems   				controllers.Problem.index(hid: Long)
GET     /hackathons/:hid/problems/:id           	controllers.Problem.view(hid: Long, id: Long)
# Update
GET     /hackathons/:hid/problems/:id/edit      	controllers.Problem.edit(hid: Long, id: Long)
POST    /hackathons/:hid/problems/:id/update    	controllers.Problem.update(hid: Long, id: Long)
# Delete
POST    /hackathons/:hid/problems/:id/delete    	controllers.Problem.delete(hid: Long, id: Long)

# Teams routes
# Create
GET     /hackathons/:hid/teams/new               	controllers.Team.create(hid: Long)
POST    /hackathons/:hid/teams                   	controllers.Team.save(hid: Long)
# Retrieve
GET     /hackathons/:hid/teams                       controllers.Team.index(hid: Long)
GET     /hackathons/:hid/teams/:id               	controllers.Team.view(hid: Long, id: Long)
# Update
GET     /hackathons/:hid/teams/:id/edit          	controllers.Team.edit(hid: Long, id: Long)
POST    /hackathons/:hid/teams/:id/update        	controllers.Team.update(hid: Long, id: Long)
# Delete
POST    /hackathons/:hid/teams/:id/delete        	controllers.Team.delete(hid: Long, id: Long)
# Join
GET    	/hackathons/:hid/teams/:id/join				controllers.Team.join(hid: Long, id: Long)
GET    	/hackathons/:hid/teams/:id/disconnect		controllers.Team.disconnect(hid: Long, id: Long)
GET    	/hackathons/:hid/teams/:id/:uid/disconnect	controllers.Team.disconnectUser(hid: Long, id: Long, uid: Long)

# Locations routes
# Create
GET     /locations/new              controllers.Location.create
POST    /locations                  controllers.Location.save
# Retrieve
GET     /locations                  controllers.Location.index
GET     /locations/:id              controllers.Location.view(id: Long)
# Update
GET     /locations/:id/edit         controllers.Location.edit(id: Long)
POST    /locations/:id/update       controllers.Location.update(id: Long)
# Delete
POST    /locations/:id/delete       controllers.Location.delete(id: Long)

# Hackathons routes
# Create
GET     /hackathons/new              controllers.Hackathon.create
POST    /hackathons                  controllers.Hackathon.save
# Retrieve
GET     /hackathons                  controllers.Hackathon.index
GET     /hackathons/:id/news		 controllers.Hackathon.view(id: Long)
# Update
GET     /hackathons/:id/edit         controllers.Hackathon.edit(id: Long)
POST    /hackathons/:id/update       controllers.Hackathon.update(id: Long)
# Delete
POST    /hackathons/:id/delete       controllers.Hackathon.delete(id: Long)

GET     /hackathons.json            controllers.Hackathon.hackathonsJson

# Prizes routes
# Create
GET     /hackathons/:hid/prizes/new					controllers.Prize.create(hid: Long)
POST    /hackathons/:hid/prizes                   	controllers.Prize.save(hid: Long)
# Retrieve
GET     /hackathons/:hid/prizes                   	controllers.Prize.index(hid: Long)
GET     /hackathons/:hid/prizes/:id                 controllers.Prize.view(hid: Long, id: Long)
# Update
GET     /hackathons/:hid/prizes/:id/edit          	controllers.Prize.edit(hid: Long, id: Long)
POST    /hackathons/:hid/prizes/:id/update        	controllers.Prize.update(hid: Long, id: Long)
# Delete
POST    /hackathons/:hid/prizes/:id/delete        	controllers.Prize.delete(hid: Long, id: Long)

# Sponsors routes
# Create
GET     /sponsors/new					controllers.Sponsor.create
POST    /sponsors                   	controllers.Sponsor.save

#Upload
POST    /sponsors/uploadLogo			controllers.Sponsor.uploadLogo
GET		/sponsors/uploadLogo/:id	   controllers.Sponsor.getLogoDetails(id:Long)

# Retrieve
GET     /sponsors                   	controllers.Sponsor.index
GET     /sponsors/:id                 	controllers.Sponsor.view(id: Long)

# Update
GET     /sponsors/:id/edit          	controllers.Sponsor.edit(id: Long)
POST    /sponsors/:id/update        	controllers.Sponsor.update(id: Long)

# Delete
GET    /sponsors/:id/delete        	controllers.Sponsor.delete(id: Long)

GET     /hackathons.json            controllers.Hackathon.hackathonsJson